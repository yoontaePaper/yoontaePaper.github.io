rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /* 1) 기본은 전부 거부 */
    match /{document=**} {
      allow read, write: if false;
    }

    /* 2) 공통 헬퍼 */
    function isSignedIn()      { return request.auth != null; }
    function isOwner(uid)      { return request.auth.uid == uid; }

    /* 논문(paper) 스키마 검증 함수 */
    function validPaper(data) {
      return data.keys().hasAll(['title', 'tags', 'status', 'importance'])
          && data.title is string && data.title.size() > 0
          && data.tags  is string && data.tags.size()  > 0
          && data.status in ['To Read', 'Reading', 'Finished']
          && data.importance is int
          && data.importance >= 1 && data.importance <= 5
          && (!('year' in data)
              || (data.year is int && data.year >= 1900 && data.year <= 2100));
    }

    /* 3) artifacts 루트 */
    match /artifacts/{appId}/users/{userId} {

      /* 3‑1) papers 컬렉션 */
      match /papers/{paperId} {

        // 읽기
        allow get, list: if isSignedIn() && isOwner(userId);

        // 생성
        allow create: if isSignedIn()
                       && isOwner(userId)
                       && validPaper(request.resource.data);

        // 수정
        allow update: if isSignedIn()
                       && isOwner(userId)
                       && validPaper(request.resource.data);

        // 삭제
        allow delete: if isSignedIn() && isOwner(userId);

        /* 3‑2) memos 서브컬렉션 */
        match /memos/{memoId} {
          allow read, write: if isSignedIn() && isOwner(userId);
        }
      }
    }
  }
}
